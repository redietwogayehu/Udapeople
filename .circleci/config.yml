version: 2.1



  
            
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
           keys:
                - frontend-deps-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
             cd frontend
             npm install
      - run:
          name: Install dependencies
          command: |
             cd frontend
             npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-deps-{{ checksum "TIER/package-lock.json" }}

  build-backend:
    docker:
      - image: cimg/node:13.8.0 
    steps:
      - checkout
      - restore_cache:
           keys:
              - backend-deps-{{ checksum "backend/package-lock.json" }}
      - run:
          name:  Install dependencies
          command: |
             cd backend
             npm install
      - run:
          name:  Build backend
          command: |
             cd backend
             npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-deps-{{ checksum "TIER/package-lock.json" }}

  test-frontend:
    docker:
    - image: cimg/node:13.8.0 
    steps:
    - checkout
    - restore_cache:
        keys:
         - frontend-deps-{{ checksum "frontend/package-lock.json" }}
    - run:
        name: Install dependencies
        command: |
          cd frontend
          npm install
    - run:
        name: Run frontend unit tests
        command: |
          cd frontend
          npm run test
   
                
  test-backend:
    docker:
    - image: cimg/node:13.8.0
      # Docker image here
    steps:
     - checkout
     - restore_cache:
        keys:
         - backend-deps-{{ checksum "backend/package-lock.json" }}
    
     - run:
        name: Install dependencies
        command: |
          cd backend
          npm install
     - run:
        name: Run backend unit tests
        command: |
          cd backend
          npm run test
      # Checkout code from git
      # Restore from cache
      # Your job code here

cleanup:
    docker:
      # Docker image here
    steps:
      # Checkout code from git
      - run:
          name: Get old stack workflow id
          command: |
            # your code here
            export OldWorkflowID="the id here"
            export STACKS=[] #put the list of stacks here
      - run:
          name: Remove old stacks and files
          command: |
            if [[ "${STACKS[@]}" =~ "${OldWorkflowID}" ]]
            then
              # your code here
            fi
            

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - deploy-infrastructure:
          requires: [test-frontend, test-backend, scan-frontend, scan-backend]
          filters:
            branches:
              only: [test-feature-branch]
      - configure-infrastructure:
          requires: [deploy-infrastructure]
      - run-migrations:
          requires: [configure-infrastructure]
      - deploy-frontend:
          requires: [run-migrations]
      - deploy-backend:
          requires: [run-migrations]
      - smoke-test:
          requires: [deploy-backend, deploy-frontend]
      - cloudfront-update:
          requires: [smoke-test]
      - cleanup:
          requires: [cloudfront-update]
